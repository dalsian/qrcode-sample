/**
 * Point of interaction is not clear at this moment.
 * {uid} may be device id, unique username from our system or
 * unique string generated by barcode for 1 particular pass.
 * 
 *  <Note> Some of the services here may be called from other processes internally
 *         and may not need to expose to endpoints in future.
 */


/**
 * Module dependencies.
 */
var express = require('express');
var util = require('util');
var router = express.Router();
var reward_service = require('../services/reward-service');

/**
 * Request client token from 7-reward api.
 */
router.get("/clientToken", (req, res) => {
    reward_service.getClientToken()
                    .then((token) => {
                        res.send(token);
                    })
                    .catch((err) => {
                        res.status(500).send(err);
                    });
});

router.get("/register/:deviceId", (req, res) => {
    reward_service.register(req.params.deviceId)
                    .then((msg) => {
                        res.status(200).json(msg);
                    })
                    .catch((err) => {
                        res.status(500).json(err);
                    });
});

/**
 * Get current reward points for a specific device.
 */
router.get('/rewards/:uid/points', (req, res) => {
    reward_service.getTotalRewardPoints(req.params.uid)
                    .then((points) => {
                        res.status(200).json(points);
                    })
                    .catch((err) => {
                        res.status(500).json(err);
                    });
});

/**
 * Get reward object and all attributes for a device.
 */
router.get('/rewards/:uid', (req, res) => {
    reward_service.getRewards(req.params.uid)
                    .then((rewards) => {
                        res.status(200).json(rewards);
                    })
                    .catch((err) => {
                        res.status(500).json(err);
                    });
});

/**
 * Update reward points for a specific device after redemption 
 * or add from server.
 * *** Too generic and may not be desirable.  Need to keep track of 
 * Add and Redemption of rewards in future.
 */
router.put('/rewards/:uid/points', (req, res) => {

});

/**
 * Redeem rewards for a specific device.
 */
router.get('/rewards/:uid/points/redeem/:amount', (req, res) => {

});

module.exports = router;